@page
@model Hermes.Website.Pages.AnalyzePaperModel
@{
    ViewData["Title"] = "Analyze Paper";
}
<style>
    .node {
        fill: #ccc;
        stroke: black;
        stroke-width: 2px;
    }

    .labels {
        font-size: 13px;
        text-anchor: middle;
        font-weight: "bold";
        fill: black;
        /* Not selcect text */
        pointer-events: none;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .link {
        stroke: #777;
        stroke-width: 2px;
    }

    .node.section {
        fill: blue;
    }

    button {
        position: absolute;
        width: 30px;
    }

        button#slow {
            margin-top: 28px;
        }

        button#play {
            margin-top: 54px;
        }

        button#reset {
            margin-top: 80px;
        }
</style>
<script src="~/js/createGraph.js" asp-append-version="true"></script>
<script>



    async function getPdf(guid) {

        let formData = new FormData();

        formData.append("guid", guid);

        let response = await fetch("/api/pdf/pdf", {
            method: 'POST',
            body: formData
        });

        let pdfBlob = await response.blob();


        console.log("TYpe: " + typeof (pdfBlob));

        let fileUrl = URL.createObjectURL(pdfBlob);

        return fileUrl;

    }

    async function getJson(guid) {

        let formData = new FormData();

        formData.append("guid", guid);

        let response = await fetch("/api/pdf/json", {
            method: 'POST',
            body: formData
        });

        let json = await response.json();

        console.log(json.nodes[1]);

        console.log("TYpe: " + typeof (json));

        return json;

    }


    async function uploadFile() {
        console.log("test hej");

        let file = document.getElementById("uploadFile").files[0];

        console.log("len: " + file.size);
        console.log("type " + typeof(file));

        let formData = new FormData();

        formData.append("file", file);

        let response = await fetch("/api/pdf", {
            method: 'POST',
            body: formData
        });

        // THIS NEEDS TO BE ASYNC
        response.json().then(async data => {


            console.log("guid: " + await data.guid);
            let guid = await data.guid;
            let pdf = await getPdf(guid);
            let json = await getJson(guid);

            document.getElementById("outputPdf").src = pdf;
            createGraph(json);

            // Load json into d3 graph



        });

        //let pdfBlob = await response.blob();

        //let fileUrl = URL.createObjectURL(pdfBlob);


        //document.getElementById("outputPdf").src = fileUrl;
    }


</script>


<div class="text-center">
    <h2 class="display-4">Welcome to the Hermes</h2>
</div>

<body>
    <div id="d3graph"></div>

    <div id="pdfviewer">
        <embed id="outputPdf" src="" width="500" height="375" type="application/pdf">

    </div>



    <input id="uploadFile" type="file" name="uploadFile" onchange="uploadFile()">




</body>
