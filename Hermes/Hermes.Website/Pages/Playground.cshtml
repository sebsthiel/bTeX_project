@page
@model Hermes.Website.Pages.PlaygroundModel
@{
    ViewData["Title"] = "Playground";
}
<style>
    .node{
        fill: #ccc;
        stroke: #fff;
        stroke-width: 2px;
    }

    .link{
        stroke: #777;
        stroke-width: 2px;
    }

</style>


<div class="text-center">
    <h2 class="display-4">Welcome to the Playground</h2>
   
</div>

<div id="mydata"></div>


<script src="https://d3js.org/d3.v3.min.js"></script>
<script>
    var width = 640,
        height = 480;

    var links = [
        {source: 'Andreas', target: 'Seb'},
        {source: 'Seb', target: 'Hermes'},
        {source: 'Hermes', target: 'Andreas'},
    ];

    var nodes = {};

    // parse links to nodes
    // creates nodes out of links
    links.forEach(function(link){
        link.source = nodes[link.source] ||
            (nodes[link.source] = {name: link.source});
        link.target = nodes[link.target] || 
            (nodes[link.target] = {name: link.target});
    });

    // add svg to our body. Acutal d3 stuff
    var svg = d3.select('body').append("svg")
        .attr("width", width)
        .attr("height", height);

    var force = d3.layout.force()
        .size([width,height])
        .nodes(d3.values(nodes))    // this is different because we made it through code ...
        .links(links)
        .on("tick", tick)
        .linkDistance(300)
        .start();
    
    var link = svg.selectAll(".link")
        .data(links)
        .enter().append("line")
        .attr("class", "link");

    var node = svg.selectAll(".node")
        .data(force.nodes())
        .enter().append("circle")
        .attr("class", node)
        .attr("r", width * 0.03);

    function tick(e){
        node.attr("cx", function(d){return d.x;})
            .attr("cy", function(d){return d.y;})
            .call(force.drag);

        link.attr("x1", function(d){return d.source.x})
            .attr("y1", function(d){return d.source.y})
            .attr("x2", function(d){return d.target.x})
            .attr("y2", function(d){return d.target.y})
    }

</script>